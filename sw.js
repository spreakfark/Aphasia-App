try{self["workbox:core:6.5.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:6.5.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,i="GET"){this.handler=s(t),this.match=e,this.method=i}setCatchHandler(e){this.catchHandler=s(e)}}class n extends i{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class a{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const i=s.origin===location.origin,{params:n,route:a}=this.findMatchingRoute({event:t,request:e,sameOrigin:i,url:s});let r=a&&a.handler;const o=e.method;if(!r&&this.i.has(o)&&(r=this.i.get(o)),!r)return;let c;try{c=r.handle({url:s,request:e,event:t,params:n})}catch(e){c=Promise.reject(e)}const l=a&&a.catchHandler;return c instanceof Promise&&(this.o||l)&&(c=c.catch((async i=>{if(l)try{return await l.handle({url:s,request:e,event:t,params:n})}catch(e){e instanceof Error&&(i=e)}if(this.o)return this.o.handle({url:s,request:e,event:t});throw i}))),c}findMatchingRoute({url:e,sameOrigin:t,request:s,event:i}){const n=this.t.get(s.method)||[];for(const a of n){let n;const r=a.match({url:e,sameOrigin:t,request:s,event:i});if(r)return n=r,(Array.isArray(n)&&0===n.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(n=void 0),{route:a,params:n}}return{}}setDefaultHandler(e,t="GET"){this.i.set(t,s(e))}setCatchHandler(e){this.o=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new a,r.addFetchListener(),r.addCacheListener()),r);function c(e,s,a){let r;if("string"==typeof e){const t=new URL(e,location.href);r=new i((({url:e})=>e.href===t.href),s,a)}else if(e instanceof RegExp)r=new n(e,s,a);else if("function"==typeof e)r=new i(e,s,a);else{if(!(e instanceof i))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return o().registerRoute(r),r}const l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},h=e=>[l.prefix,e,l.suffix].filter((e=>e&&e.length>0)).join("-"),p=e=>e||h(l.precache),u=e=>e||h(l.runtime);function f(e,t){const s=t();return e.waitUntil(s),s}try{self["workbox:precaching:6.5.3"]&&_()}catch(e){}function d(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:i}=e;if(!i)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(i,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(i,location.href),a=new URL(i,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:a.href}}class w{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class b{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this.l.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this.l=e}}let m;async function v(e,s){let i=null;if(e.url){i=new URL(e.url).origin}if(i!==self.location.origin)throw new t("cross-origin-copy-response",{origin:i});const n=e.clone(),a={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(a):a,o=function(){if(void 0===m){const e=new Response("");if("body"in e)try{new Response(e.body),m=!0}catch(e){m=!1}m=!1}return m}()?n.body:await n.blob();return new Response(o,r)}function A(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class g{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const y=new Set;try{self["workbox:strategies:6.5.3"]&&_()}catch(e){}function R(e){return"string"==typeof e?new Request(e):e}class q{constructor(e,t){this.h={},Object.assign(this,t),this.event=t.event,this.p=e,this.u=new g,this.m=[],this.v=[...e.plugins],this.A=new Map;for(const e of this.v)this.A.set(e,{});this.event.waitUntil(this.u.promise)}async fetch(e){const{event:s}=this;let i=R(e);if("navigate"===i.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?i.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))i=await e({request:i.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const a=i.clone();try{let e;e=await fetch(i,"navigate"===i.mode?void 0:this.p.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:a,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:a.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=R(e);let s;const{cacheName:i,matchOptions:n}=this.p,a=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:i});s=await caches.match(a,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:i,matchOptions:n,cachedResponse:s,request:a,event:this.event})||void 0;return s}async cachePut(e,s){const i=R(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const a=await this.getCacheKey(i,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=a.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const o=await this.g(s);if(!o)return!1;const{cacheName:c,matchOptions:l}=this.p,h=await self.caches.open(c),p=this.hasCallback("cacheDidUpdate"),u=p?await async function(e,t,s,i){const n=A(t.url,s);if(t.url===n)return e.match(t,i);const a=Object.assign(Object.assign({},i),{ignoreSearch:!0}),r=await e.keys(t,a);for(const t of r)if(n===A(t.url,s))return e.match(t,i)}(h,a.clone(),["__WB_REVISION__"],l):null;try{await h.put(a,p?o.clone():o)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of y)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:u,newResponse:o.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this.h[s]){let i=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))i=R(await e({mode:t,request:i,event:this.event,params:this.params}));this.h[s]=i}return this.h[s]}hasCallback(e){for(const t of this.p.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this.p.plugins)if("function"==typeof t[e]){const s=this.A.get(t),i=i=>{const n=Object.assign(Object.assign({},i),{state:s});return t[e](n)};yield i}}waitUntil(e){return this.m.push(e),e}async doneWaiting(){let e;for(;e=this.m.shift();)await e}destroy(){this.u.resolve(null)}async g(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class U extends class{constructor(e={}){this.cacheName=u(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,i="params"in e?e.params:void 0,n=new q(this,{event:t,request:s,params:i}),a=this._(n,s,t);return[a,this.R(a,n,s,t)]}async _(e,s,i){let n;await e.runCallbacks("handlerWillStart",{event:i,request:s});try{if(n=await this.q(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const a of e.iterateCallbacks("handlerDidError"))if(n=await a({error:t,event:i,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:i,request:s,response:n});return n}async R(e,t,s,i){let n,a;try{n=await e}catch(a){}try{await t.runCallbacks("handlerDidRespond",{event:i,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(a=e)}if(await t.runCallbacks("handlerDidComplete",{event:i,request:s,response:n,error:a}),t.destroy(),a)throw a}}{constructor(e={}){e.cacheName=p(e.cacheName),super(e),this.U=!1!==e.fallbackToNetwork,this.plugins.push(U.copyRedirectedCacheableResponsesPlugin)}async q(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this.j(e,t):await this.k(e,t))}async k(e,s){let i;const n=s.params||{};if(!this.U)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const t=n.integrity,a=e.integrity,r=!a||a===t;i=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?a||t:void 0})),t&&r&&"no-cors"!==e.mode&&(this.L(),await s.cachePut(e,i.clone()))}return i}async j(e,s){this.L();const i=await s.fetch(e);if(!await s.cachePut(e,i.clone()))throw new t("bad-precaching-response",{url:e.url,status:i.status});return i}L(){let e=null,t=0;for(const[s,i]of this.plugins.entries())i!==U.copyRedirectedCacheableResponsesPlugin&&(i===U.defaultPrecacheCacheabilityPlugin&&(e=s),i.cacheWillUpdate&&t++);0===t?this.plugins.push(U.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}U.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},U.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await v(e):e};class j{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this.C=new Map,this.O=new Map,this.N=new Map,this.p=new U({cacheName:p(e),plugins:[...t,new b({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.p}precache(e){this.addToCacheList(e),this.K||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.K=!0)}addToCacheList(e){const s=[];for(const i of e){"string"==typeof i?s.push(i):i&&void 0===i.revision&&s.push(i.url);const{cacheKey:e,url:n}=d(i),a="string"!=typeof i&&i.revision?"reload":"default";if(this.C.has(n)&&this.C.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.C.get(n),secondEntry:e});if("string"!=typeof i&&i.integrity){if(this.N.has(e)&&this.N.get(e)!==i.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this.N.set(e,i.integrity)}if(this.C.set(n,e),this.O.set(n,a),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return f(e,(async()=>{const t=new w;this.strategy.plugins.push(t);for(const[t,s]of this.C){const i=this.N.get(s),n=this.O.get(t),a=new Request(t,{integrity:i,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:a,event:e}))}const{updatedURLs:s,notUpdatedURLs:i}=t;return{updatedURLs:s,notUpdatedURLs:i}}))}activate(e){return f(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this.C.values()),i=[];for(const n of t)s.has(n.url)||(await e.delete(n),i.push(n.url));return{deletedURLs:i}}))}getURLsToCacheKeys(){return this.C}getCachedURLs(){return[...this.C.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.C.get(t.href)}getIntegrityForCacheKey(e){return this.N.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}let k;const L=()=>(k||(k=new j),k);class x extends i{constructor(e,t){super((({request:s})=>{const i=e.getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:i=!0,urlManipulation:n}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(a,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(i){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:a});for(const t of e)yield t.href}}(s.url,t)){const t=i.get(n);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}}),e.strategy)}}var C,E;self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),C={},function(e){L().precache(e)}([{url:"/Aphasia-Approbots.txt",revision:"ea6b94db76687d4538d1341c4f2120dd"},{url:"/Aphasia-App_app/immutable/assets/+layout-af88e95f.css",revision:null},{url:"/Aphasia-App_app/immutable/assets/+page-26c2e937.css",revision:null},{url:"/Aphasia-App_app/immutable/assets/+page-ba18a7ec.css",revision:null},{url:"/Aphasia-App_app/immutable/assets/back-icon-b047119d.css",revision:null},{url:"/Aphasia-App_app/immutable/assets/tile-ae97b290.css",revision:null},{url:"/Aphasia-App_app/immutable/chunks/0-68107e4c.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/1-114d348c.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/2-c38ff2c0.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/3-eeb7f88b.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/4-cbd840f5.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/5-974db7f7.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/6-04a23ecb.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/7-9493ab3d.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/back-icon-e214ef35.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/index-18da49c2.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/index-bf283ca9.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/paths-6cd3a76e.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/singletons-442e1843.js",revision:null},{url:"/Aphasia-App_app/immutable/chunks/tile-b57ca796.js",revision:null},{url:"/Aphasia-App_app/immutable/components/error.svelte-615e1638.js",revision:null},{url:"/Aphasia-App_app/immutable/components/pages/_layout.svelte-23603f5d.js",revision:null},{url:"/Aphasia-App_app/immutable/components/pages/_page.svelte-08f7b787.js",revision:null},{url:"/Aphasia-App_app/immutable/components/pages/emotions/_page.svelte-3653e603.js",revision:null},{url:"/Aphasia-App_app/immutable/components/pages/food-drink/_page.svelte-3e5b4eaf.js",revision:null},{url:"/Aphasia-App_app/immutable/components/pages/pain/_page.svelte-d8d30e7d.js",revision:null},{url:"/Aphasia-App_app/immutable/components/pages/pain/intensity/_page.svelte-250cda82.js",revision:null},{url:"/Aphasia-App_app/immutable/components/pages/yes-no/_page.svelte-665acd88.js",revision:null},{url:"/Aphasia-App_app/immutable/start-3dad6fde.js",revision:null},{url:"/Aphasia-AppAphasia_logo.svg",revision:"7d9060e6d1d5f690a3b1484765d36b0f"},{url:"/Aphasia-Appemotions",revision:"7c66adc3d7dfde714b97806fc1c0d204"},{url:"/Aphasia-Appfavicon.png",revision:"800e6ab0a1e71004d8e3a3c92d88241f"},{url:"/Aphasia-Appfood-drink",revision:"bfada6a45a9389850807f161379bbed2"},{url:"/Aphasia-Appicons/doctor.svg",revision:"a26634a61ac51ce01955375ccecb4719"},{url:"/Aphasia-Appicons/emoticon-angry-outline.svg",revision:"63c9ee9057f7b64c1df117edaca9972e"},{url:"/Aphasia-Appicons/food.svg",revision:"1e14e99f0e88567ee670c46a9535bec3"},{url:"/Aphasia-Appicons/lightning-bolt.svg",revision:"b242c9e8d3e683ee0d0afde19d0a2e94"},{url:"/Aphasia-Appicons/paper-roll-outline.svg",revision:"a0fafcd0d67627a661b9a7c22b008ee0"},{url:"/Aphasia-Appicons/pill.svg",revision:"575f11dad83da2772b3dcd1e3466d03b"},{url:"/Aphasia-Appicons/seat-flat-angled.svg",revision:"24f7de42b4f52ee832540f4594f494ed"},{url:"/Aphasia-Appicons/seat-flat.svg",revision:"f4be2071d6fa8ff8e11a1ef02bc738ed"},{url:"/Aphasia-Appicons/seat-passenger.svg",revision:"42a6c8d2a40b056662ebebff199bca24"},{url:"/Aphasia-Appicons/shower.svg",revision:"74bc093e294a845e200f9c2d3ac8ea41"},{url:"/Aphasia-Appicons/television-classic.svg",revision:"d44b886b32fd2d8dbc57e52fbd388102"},{url:"/",revision:"60fa5c7d4ad9d2cf83ecbd760879907f"},{url:"/Aphasia-Appmanifest.webmanifest",revision:"2c918abde43caba812fe02f657d786b2"},{url:"/Aphasia-Apppain",revision:"ea64925b0bbbd017e9832a78c3eb213c"},{url:"/Aphasia-Apppain/intensity",revision:"ce2f0bcba71023ef0fad3338922b3a76"},{url:"/Aphasia-Apppwa-192x192.png",revision:"ec1b9ee95a94f764829c6a429dfe0a04"},{url:"/Aphasia-Apppwa-512x512.png",revision:"be60db182fe350d0970fdf559d1ffb1c"},{url:"/Aphasia-Appyes-no",revision:"51cf51095593bd2449fb7c04a644bad6"},{url:"manifest.webmanifest",revision:"2c918abde43caba812fe02f657d786b2"}]),function(e){const t=L();c(new x(t,e))}(C),self.addEventListener("activate",(e=>{const t=p();e.waitUntil((async(e,t="-precache-")=>{const s=(await self.caches.keys()).filter((s=>s.includes(t)&&s.includes(self.registration.scope)&&s!==e));return await Promise.all(s.map((e=>self.caches.delete(e)))),s})(t).then((e=>{})))})),c(new class extends i{constructor(e,{allowlist:t=[/./],denylist:s=[]}={}){super((e=>this.P(e)),e),this.T=t,this.W=s}P({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;const s=e.pathname+e.search;for(const e of this.W)if(e.test(s))return!1;return!!this.T.some((e=>e.test(s)))}}((E="/Aphasia-App",L().createHandlerBoundToURL(E))));
